name: 'AutoCoder'
description: 'Generates code from GitHub issues using ChatGPT, commits the code into a new branch, and creates a pull request'
inputs:
  github_token:
    description: 'GitHub token for API authentication'
    required: true
  openai_api_key:
    description: 'OpenAI API key for interacting with ChatGPT'
    required: true
  issue_number:
    description: 'The number of the GitHub issue to process'
    required: true
  repository:
    description: 'The full name of the repository to work on. Format: owner/repo'
    required: true
  label:
    description: 'The label to trigger this action'
    required: true
  commit_message:
    description: 'The commit message to use for committing the generated code'
    required: false
    default: 'feat: Add code generated by ChatGPT'
  branch_prefix:
    description: 'Prefix for the branch name that will be created'
    required: false
    default: 'autocoder-branch-'
  base_branch:
    description: 'The base branch for the pull request'
    required: false
    default: 'main'
  pr_title:
    description: 'The title for the pull request'
    required: false
    default: 'Code generated by ChatGPT'
  pr_body:
    description: 'The body content for the pull request'
    required: false
    default: 'This pull request contains changes auto-generated by ChatGPT based on issue contents.'
  pr_label:
    description: 'Label to assign to the pull request'
    required: false
    default: 'autocoder-bot'
  pr_reviewers:
    description: 'Comma-separated list of reviewers to request for the pull request'
    required: false
  pr_assignees:
    description: 'Comma-separated list of assignees for the pull request'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run interaction script
      shell: bash
      run: |
        chmod +x ./scripts/script.sh
        ./scripts/script.sh ${{ inputs.github_token }} ${{ inputs.repository }} ${{ inputs.issue_number }} ${{ inputs.openai_api_key }}

    - name: Commit files
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b ${{ inputs.branch_prefix }}${{ inputs.issue_number }}
        git add .
        git commit -m "${{ inputs.commit_message }}" || echo "No changes to commit"

    - name: Push changes
      shell: bash
      run: git push -u origin ${{ inputs.branch_prefix }}${{ inputs.issue_number }}

    - name: Create pull request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ inputs.github_token }}
        commit-message: ${{ inputs.commit_message }}
        title: ${{ inputs.pr_title }}
        body: ${{ inputs.pr_body }}
        branch: ${{ inputs.branch_prefix }}
        base: ${{ inputs.base_branch }}
        labels: ${{ inputs.pr_label }}
        reviewers: ${{ inputs.pr_reviewers }}
        assignees: ${{ inputs.pr_assignees }}
        draft: false